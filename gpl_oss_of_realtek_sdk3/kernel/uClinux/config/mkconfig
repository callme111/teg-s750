#! /bin/sh
#############################################################################
#
# Generate the vendor/product menu entries for the top level config
#
# davidm@snapgear.com
#
#############################################################################

fix_name()
{
	echo $1 | tr '[\-\.\/\+a-z]' '[____A-Z]'
}

#############################################################################
#
# the header of the config
#

echo "mainmenu_name 'SnapGear Embedded Linux Configuration'"

#############################################################################
#
# Figure out the vendor/products dynamically, allows people to add there
# own without messin with the config.in file
#

echo "mainmenu_option next_comment"
echo "comment 'Vendor/Product Selection'"
echo "comment 'Select the Vendor you wish to target'"
echo -n "choice 'Vendor' \""

oldv=
defaultv=Realtek
find -L vendors -name config.sdk -print | sed -e 's?/? ?g' | \
		sort | while read t1 v p t2
do
	[ "$v" = "config" ] && continue
	[ "$v" = "$oldv" ] && continue
	echo "${v} CONFIG_DEFAULTS_`fix_name ${v}` \\"
	oldv=$v
done
echo "\" $defaultv"
#echo "endmenu"

# echo "mainmenu_option next_comment"
# echo "comment 'Product Selection'"
echo "comment 'Select the Product you wish to target'"

oldv=
def=
defp=SDK
find -L vendors -name config.sdk -print | sed -e 's?/? ?g' | \
		(sort; echo "END END END END") | while read t1 v p t2
do
	[ "$v" = "config" ] && continue
	if [ "$v" != "$oldv" ]
	then
		[ "$def" -o "$v" = END ] && echo "\" $defp"
		[ "$def" -o "$v" = END ] && echo "fi"
		[ "$v" = END ] && break
		echo "if [ \"\$CONFIG_DEFAULTS_`fix_name ${v}`\" = \"y\" ]; then"
		echo -n "choice '${v} Products' \""
		def="${p}"
	fi
	if [ -f "vendors/$v/$p/config.languages" ]
	then
		for i in `cat "vendors/$v/$p/config.languages"`
		do
			[ "$def" = "${p}" ] && def="${p}\\($i\\)"
			echo "${p}($i) CONFIG_DEFAULTS_`fix_name ${v}`_`fix_name ${p}`_`fix_name ${i}` \\"
		done
	else
		echo "${p} CONFIG_DEFAULTS_`fix_name ${v}`_`fix_name ${p}` \\"
	fi
	oldv=$v
done

echo "if [ \"\$CONFIG_DEFAULTS_REALTEK\" = \"y\" ]; then"
echo "	if [ \"\$CONFIG_DEFAULTS_REALTEK_SDK\" != \"y\" -a \"\$CONFIG_DEFAULTS_REALTEK_8390_SDK_DEMO\" != \"y\" -a \"\$CONFIG_DEFAULTS_REALTEK_8390_SDK_FPGA\" != \"y\" ]; then"
echo "		define_bool CONFIG_LOADER_TURNKEY y"
echo "		define_bool CONFIG_LOADER_TURNKEY_UBOOT2011_12 y"
echo "	fi"
echo "else"
echo "		define_bool CONFIG_LOADER_TURNKEY y"
echo "		if [ \"\$CONFIG_DEFAULTS_CISCO_MS200X\" = \"y\" ]; then"
echo "			define_bool CONFIG_LOADER_TURNKEY_UBOOT y"
echo "			define_bool CONFIG_LOADER_TURNKEY_VENDOR y"
echo "		else"
echo "			define_bool CONFIG_LOADER_TURNKEY_UBOOT2011_12 y"
echo "		fi"
echo "fi"

echo "endmenu"

#############################################################################
echo ""
echo "mainmenu_option next_comment"
echo "comment 'Kernel/Library/Defaults Selection'"
echo ""

echo "choice 'Compiler' \"default CONFIG_COMPILER_DEFAULT debug_pc CONFIG_COMPILER_DEBUG_PC\" default"


#
# Which kernel do they want,  if only one then just set it,  I don't
# expect an explosion of kernels just yet ;-)
#

KERNELS="`ls -d --sort=version  linux-* 2>/dev/null`"
NKERNELS="`echo ${KERNELS} | wc -w`"
if [ ${NKERNELS} -gt 1 ]; then
	echo -n "choice 'Kernel Version' \""
	for i in ${KERNELS}; do
		VER=${i##linux-}
		CFG="CONFIG_DEFAULTS_KERNEL_`echo ${VER%%.x}|sed -e 's/[-\.]/_/g'`"
		DEF="linux-${VER}"
		echo "${DEF} ${CFG} \\"
	done
# Select default Kernel linux-2.6.x
	DEF="`echo ${KERNELS} | awk '{print $1}'`"
	echo "\" $DEF"
elif [ ${NKERNELS} -eq 1 ]; then
	VER=${KERNELS##linux-}
	CFG="CONFIG_DEFAULTS_KERNEL_`echo ${VER%%.x}|sed -e 's/[-\.]/_/g'`"
	echo "comment 'Kernel is linux-${VER}'"
	echo "define_bool ${CFG} y"
else
	echo "ERROR: you have no kernels available in this directory." >&2
	exit 1
fi
echo ""

#############################################################################
#
# Which libc do they want
#
echo "if [ \"\$CONFIG_DEFAULTS_KERNEL_3_18_24\" = \"y\" ]; then"
echo "	choice 'Libc Version' \""
echo "		uClibc-0.9.33-485-200 CONFIG_DEFAULTS_LIBC_UCLIBC_0_9_33_485_200"
echo "\" uClibc-0.9.33-485-200"
echo "fi"
echo "if [ \"\$CONFIG_DEFAULTS_KERNEL_4_4\" = \"y\" ]; then"
echo "	choice 'Libc Version' \""
echo "		uClibc-0.9.33-485-203 CONFIG_DEFAULTS_LIBC_UCLIBC_0_9_33_485_203"
echo "\" uClibc-0.9.33-485-203"
echo "fi"
echo ""

#############################################################################
#
# Bootloader selection
#
echo "choice 'Boot Loader' \""
echo "	U-Boot-2011.12 CONFIG_LOADER_UBOOT2011_12"
echo "\" U-Boot-2011.12"


#############################################################################
#
# the rest of the config
#

# echo "mainmenu_option next_comment"
# echo "comment 'Configuration Overrides'"

cat <<!EOF
bool 'Customize Loader Settings'		CONFIG_DEFAULTS_LOADER
bool 'Customize Kernel Settings'		CONFIG_DEFAULTS_KERNEL
bool 'Customize SDK Settings'			CONFIG_DEFAULTS_SDK
bool 'Customize TURNKEY Settings'		CONFIG_DEFAULTS_TURNKEY
endmenu
!EOF

############################################################################
